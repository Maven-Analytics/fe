.form {
  &--light {
    .input {
      background-color: $gray-light-3;
      border-color: $gray-light-3;
      color: $black-alt;

      &:focus {
        border-color: $gray-light-3;
      }

      &::placeholder {
        color: $black-alt;
        // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
        opacity: .2;
      }

      &:disabled,
      &[readonly] {
        background-color: $gray-light-3;
        border-color: $gray-light-3;
        color: $gray;
        // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
        opacity: 1;
      }
    }

    label {
      color: $black;
      font-weight: 400;
    }
  }

  &--account {
    button[type="submit"] {
      @include btnFixed(40px, 100px, 20px);
      font-size: 1.1rem;
    }
  }
}

.input {
  background-color: $matterhorn;
  background-clip: padding-box;
  border: 1px solid $matterhorn;
  color: $gray-light;
  display: block;
  font-size: 1.4rem;
  font-weight: 400;
  height: 40px;
  padding: 1rem 2rem;
  width: 100%;

  &:focus {
    border-color: $matterhorn;
  }

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Placeholder
  &::placeholder {
    color: $white;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: .2;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $gray;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}

select.input {
  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $gray-light;
    background-color: $matterhorn;
  }
}

label {
  color: $gray-light;
  font-size: 1.4rem;
  margin-bottom: $spacing-unit--ss;
}

.form-group {
  margin-bottom: $spacing-unit;
}

.mce_inline_error,
.form-text {
  background-color: transparent;
  color: $gray;
  display: block;
  margin-top: $spacing-unit--xs;

  &.mce_inline_error,
  &.error {
    color: $red;
  }
}

.mce_inline_error {
  background-color: transparent !important;
  color: $red !important;
  font-size: 1.2rem !important;
  margin: .2rem 0 !important;
}

#mc_embed_signup {
  .form-group {
    margin: 0;
  }
}

.form-message {
  min-height: 2rem;

  p {
    margin: 0;
  }

  & + .form-footer {
    margin-top: $spacing-unit--ss;
  }
}

.form-footer {
  font-size: 1.2rem;
  margin-top: $spacing-unit;

  @include media-breakpoint-up(lg) {
    margin-top: $spacing-unit--l;
  }
}

.checkbox {
  align-items: center;
  display: flex;
  min-height: 22px;
  padding-left: 35px;
  position: relative;
  margin-top: .3rem;

  &::before {
    content: ' ';
    background-color: $matterhorn;
    height: 22px;
    left: 0;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 22px;
  }

  &::after {
    color: $yellow;
    content: '\e909';
    font-family: 'maicon';
    left: 4px;
    opacity: 0;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    transition: opacity .2s ease-in-out;
  }

  &:focus-within {
    outline: -webkit-focus-ring-color auto 5px;
  }

  input {
    cursor: pointer;
    height: 100%;
    left: 0;
    position: absolute;
    opacity: 0;
    top: 0;
    width: 22px;
    z-index: 1;

    &[disabled] ~ label {
      color: $gray-lighter;
    }

    &:focus {
      outline-color: $gray;
    }
  }

  label {
    margin-bottom: 0;
    // user-select: none;
  }

  a:not(.btn) {
    color: inherit;
    text-decoration: underline;
  }

  &.checked {
    &::after {
      opacity: 1;
    }
  }
}

.checkbox-circle {
  $circleSize: 30px;
  $circleSizeSmall: 18px;
  min-height: $circleSize;
  position: relative;
  padding-left: $circleSize + 20;

  &:focus-within {
    outline: -webkit-focus-ring-color auto 5px;
  }

  input {
    height: 100%;
    left: 0;
    position: absolute;
    opacity: 0;
    top: 0;
    width: 100%;
    z-index: 1;

    &[disabled] ~ label {
      color: $gray-lighter;
    }

    &:focus {
      outline-color: $gray;
    }
  }

  label {
    margin-top: 2px;
    vertical-align: middle;
  }

  &::before {
    border: 2px solid $yellow;
    border-radius: 50%;
    content: ' ';
    height: $circleSize;
    left: 0;
    position: absolute;
    width: $circleSize;
  }

  &::after {
    content: ' ';
    background: $brand-gradient;
    border-radius: 50%;
    height: $circleSizeSmall;
    left: 6px;
    opacity: 0;
    position: absolute;
    top: 6px;
    transition: opacity .2s ease-in-out;
    width: $circleSizeSmall;
  }

  &.checked {
    &::after {
      opacity: 1;
    }
  }
}

.child-checkbox {
  display: inline-block;
  position: relative;

  &:focus-within {
    outline: -webkit-focus-ring-color auto 5px;
  }

  input {
    height: 100%;
    left: 0;
    position: absolute;
    opacity: 0;
    top: 0;
    width: 100%;
    z-index: 1;

    &:focus {
      outline-color: $gray;
    }
  }
}

.form-options {
  ul {
    @include list-inline();
    flex-wrap: wrap;

    li {
      &:not(:last-child) {
        margin-right: 2rem;

        @include media-breakpoint-up(lg) {
          margin-right: 3rem;
        }
      }

      &.active {
        button {
          background-color: $black;
          color: $white;
        }
      }
    }
  }

  button {
    @extend %btn;
    align-items: center;
    border-width: 1px;
    border-radius: 21.5px;
    display: flex;
    height: 43px;
    justify-content: center;
    min-width: 8rem;

    &:hover {
      background-color: $black;
      color: $white;
    }
  }
}
